{"version":3,"sources":["components/ContactForm/contactForm.module.css","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/App/App.jsx","index.js","components/ContactList/contactList.module.css","components/App/app.module.css","components/Filter/filter.module.css"],"names":["module","exports","FormInput","state","name","number","handleChange","e","setState","target","value","handleSubmit","preventDefault","contact","id","shortid","generate","onAddContact","props","this","onSubmit","className","styles","text_form","input_form","type","onChange","placeholder","btn_submit","Component","ContactList","contacts","onDelete","list","map","el","item","key","text","btn","onClick","Filter","input_filter","findToMatch","find","element","toLowerCase","App","filter","addContact","findContact","alert","prevState","deleteContact","filteredContacts","includes","filterContacts","container","title","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.a8cf8a19.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"text_form\":\"contactForm_text_form__nd7es\",\"input_form\":\"contactForm_input_form__3C4vy\",\"btn_submit\":\"contactForm_btn_submit__2yuYr\"};","import React, { Component } from 'react';\nimport shortid from 'short-id';\nimport T from 'prop-types';\nimport styles from './contactForm.module.css';\n\nexport default class FormInput extends Component {\n  static propTypes = {\n    onAddContact: T.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const contact = {\n      id: shortid.generate(),\n      name: this.state.name,\n      number: this.state.number,\n    };\n    const { onAddContact } = this.props;\n\n    onAddContact(contact);\n\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <>\n        <form onSubmit={this.handleSubmit}>\n          <p className={styles.text_form}>Name</p>\n          <input\n            className={styles.input_form}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleChange}\n            placeholder=\"Enter contact\"\n          />\n          <p className={styles.text_form}>Number</p>\n          <input\n            className={styles.input_form}\n            type=\"text\"\n            name=\"number\"\n            value={number}\n            onChange={this.handleChange}\n            placeholder=\"Enter number\"\n          />\n          <button className={styles.btn_submit} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\n// import React from 'react';\n// import T from 'prop-types';\n\n// const FormInput = ({ onChange, onSubmit, valueName, valueNumber }) => (\n//   <>\n//     <p>Name</p>\n//     <form onSubmit={onSubmit}>\n//       <input\n//         type=\"text\"\n//         name=\"name\"\n//         value={valueName}\n//         onChange={onChange}\n//         placeholder=\"Enter contact\"\n//       />\n//       <p>Number</p>\n//       <input\n//         type=\"text\"\n//         name=\"number\"\n//         value={valueNumber}\n//         onChange={onChange}\n//         placeholder=\"Enter number\"\n//       />\n\n//       <button type=\"submit\">Add contact</button>\n//     </form>\n//   </>\n// );\n\n// FormInput.propTypes = {\n//   onChange: T.func.isRequired,\n//   onSubmit: T.func.isRequired,\n//   valueName: T.string.isRequired,\n//   valueNumber: T.string.isRequired,\n// };\n\n// export default FormInput;\n","import React from 'react';\nimport T from 'prop-types';\nimport styles from './contactList.module.css';\n\nconst ContactList = ({ contacts, onDelete }) => {\n  return (\n    <ul className={styles.list}>\n      {contacts.map(el => (\n        <li className={styles.item} key={el.id}>\n          {' '}\n          <p className={styles.text}>\n            {el.name}: {el.number}{' '}\n          </p>\n          <button\n            className={styles.btn}\n            type=\"submit\"\n            onClick={() => onDelete(el.id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: T.arrayOf(T.shape({})).isRequired,\n  onDelete: T.func.isRequired,\n};\n\nexport default ContactList;\n","import React from 'react';\nimport T from 'prop-types';\nimport styles from './filter.module.css';\n\nconst Filter = ({ value, onChange }) => (\n  <>\n    <p>Find contacts by name</p>\n    <input\n      className={styles.input_filter}\n      type=\"text\"\n      value={value}\n      name=\"filter\"\n      placeholder=\"To find contact ...\"\n      onChange={onChange}\n    />\n  </>\n);\n\nFilter.propTypes = {\n  value: T.string.isRequired,\n  onChange: T.func.isRequired,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport styles from './app.module.css';\nimport ContactForm from '../ContactForm/ContactForm';\nimport ContactList from '../ContactList/ContactList';\nimport Filter from '../Filter/Filter';\n\nconst filterContacts = (contacts, filter) => {\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\n  );\n};\n\nconst findToMatch = (contacts, contact) => {\n  return contacts.find(\n    element => element.name.toLowerCase() === contact.name.toLowerCase(),\n  );\n};\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  addContact = contact => {\n    const findContact = findToMatch(this.state.contacts, contact);\n    if (contact.name) {\n      findContact\n        ? alert(`${findContact.name} is already in contacts`)\n        : this.setState(prevState => ({\n            contacts: [...prevState.contacts, contact],\n          }));\n    } else {\n      alert('Input name!');\n    }\n  };\n\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const filteredContacts = filterContacts(contacts, filter);\n\n    return (\n      <div className={styles.container}>\n        <h1 className={styles.title}>Phonebook</h1>\n        <ContactForm\n          onChange={this.handleChange}\n          onAddContact={this.addContact}\n        />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.handleChange} />\n        <ContactList\n          contacts={filteredContacts}\n          onDelete={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"contactList_list__mS8dL\",\"item\":\"contactList_item__3zfTx\",\"text\":\"contactList_text__1x9SY\",\"btn\":\"contactList_btn__186U3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"app_container__n25AS\",\"title\":\"app_title__25yYK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input_filter\":\"filter_input_filter__2G74W\"};"],"sourceRoot":""}